{"version":3,"sources":["components/DisplayComponent.js","components/KeypadComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Display","Row","className","id","Col","Keypad","props","keyPressCallback","event","updateDisplay","target","innerHTML","Container","xs","onClick","Main","state","timeoutObj","containerOffset","result","displayLimitMsg","operators","keyToClickableId","1","2","3","4","5","6","7","8","9","0","Escape","Enter","bind","detectKeyStrokeAndUpdateDisplay","resetKeypad","findElementId","document","addEventListener","this","removeEventListener","key","elementId","getElementById","classList","add","preventDefault","remove","clearTimeoutObj","clearTimeout","setState","isExceed","element","offset","parent","parentElement","parentComputedStyles","getComputedStyle","clientWidth","parseFloat","paddingLeft","paddingRight","displaySpan","querySelector","opDisplay","opDisplaySpan","firstElementChild","style","isNaN","includes","validateAndCombine","initialStr","charAt","length","displaySpanStr","lastChar","nextLastChar","nextLastCharIsOp","slice","value","regex","match","operands","replace","split","reduce","sum","operand","scroll","left","prevOpDispVal","setTimeout","elementStr","lastIdxOfOp","op","Math","max","lastIndexOf","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.595e6956.chunk.js","sourcesContent":["import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function Display() {\n  return (\n    <Row className=\"row-container\" id=\"display-container\">\n      <Col id=\"display\">\n        <span id=\"display-text\">&nbsp;</span>\n      </Col>\n      <hr />\n      <Col id=\"op-display\">\n        <span id=\"op-display-text\">0</span>\n      </Col>\n    </Row>\n  );\n}\n","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function Keypad(props) {\n  const keyPressCallback = (event) =>\n    props.updateDisplay(event.target.innerHTML);\n\n  return (\n    <Row className=\"row-container\" id=\"keypad-container\">\n      <Container id=\"keypad\">\n        <Row>\n          <Col\n            xs={6}\n            id=\"clear\"\n            className=\"clickable\"\n            onClick={keyPressCallback}\n          >\n            AC\n          </Col>\n          <Col\n            id=\"divide\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            /\n          </Col>\n          <Col\n            id=\"multiply\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            *\n          </Col>\n        </Row>\n        <Row>\n          <Col id=\"seven\" className=\"clickable\" onClick={keyPressCallback}>\n            7\n          </Col>\n          <Col id=\"eight\" className=\"clickable\" onClick={keyPressCallback}>\n            8\n          </Col>\n          <Col id=\"nine\" className=\"clickable\" onClick={keyPressCallback}>\n            9\n          </Col>\n          <Col\n            id=\"subtract\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            -\n          </Col>\n        </Row>\n        <Row>\n          <Col id=\"four\" className=\"clickable\" onClick={keyPressCallback}>\n            4\n          </Col>\n          <Col id=\"five\" className=\"clickable\" onClick={keyPressCallback}>\n            5\n          </Col>\n          <Col id=\"six\" className=\"clickable\" onClick={keyPressCallback}>\n            6\n          </Col>\n          <Col\n            id=\"add\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            +\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={9} className=\"no-border nested-row\">\n            <Row>\n              <Col id=\"one\" className=\"clickable\" onClick={keyPressCallback}>\n                1\n              </Col>\n              <Col id=\"two\" className=\"clickable\" onClick={keyPressCallback}>\n                2\n              </Col>\n              <Col id=\"three\" className=\"clickable\" onClick={keyPressCallback}>\n                3\n              </Col>\n            </Row>\n            <Row>\n              <Col\n                xs={8}\n                id=\"zero\"\n                className=\"clickable\"\n                onClick={keyPressCallback}\n              >\n                0\n              </Col>\n              <Col\n                id=\"decimal\"\n                className=\"clickable\"\n                onClick={keyPressCallback}\n              >\n                .\n              </Col>\n            </Row>\n          </Col>\n          <Col id=\"equals\" className=\"clickable\" onClick={keyPressCallback}>\n            =\n          </Col>\n        </Row>\n      </Container>\n    </Row>\n  );\n}\n","import { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Display from \"./DisplayComponent\";\nimport Keypad from \"./KeypadComponent\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeoutObj: null,\n      containerOffset: 20,\n      result: null,\n      displayLimitMsg: \"DIGIT LIMIT MET\",\n      operators: [\"+\", \"-\", \"*\", \"/\"],\n      keyToClickableId: {\n        1: \"one\",\n        2: \"two\",\n        3: \"three\",\n        4: \"four\",\n        5: \"five\",\n        6: \"six\",\n        7: \"seven\",\n        8: \"eight\",\n        9: \"nine\",\n        0: \"zero\",\n        \".\": \"decimal\",\n        Escape: \"clear\",\n        \"/\": \"divide\",\n        \"*\": \"multiply\",\n        \"+\": \"add\",\n        \"-\": \"subtract\",\n        \"=\": \"equals\",\n        Enter: \"equals\",\n      },\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.detectKeyStrokeAndUpdateDisplay =\n      this.detectKeyStrokeAndUpdateDisplay.bind(this);\n    this.resetKeypad = this.resetKeypad.bind(this);\n    this.findElementId = this.findElementId.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.detectKeyStrokeAndUpdateDisplay);\n    document.addEventListener(\"keyup\", this.resetKeypad);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      \"keydown\",\n      this.detectKeyStrokeAndUpdateDisplay\n    );\n    document.removeEventListener(\"keyup\", this.resetKeypad);\n  }\n\n  findElementId(key) {\n    return (\n      this.state.keyToClickableId[key] ||\n      this.state.keyToClickableId[+key] ||\n      null\n    );\n  }\n\n  detectKeyStrokeAndUpdateDisplay(event) {\n    const key = event.key;\n    const elementId = this.findElementId(key);\n\n    if (elementId) {\n      this.updateDisplay(key);\n      document.getElementById(elementId).classList.add(\"keyActive\");\n    }\n    if (key === \"/\") event.preventDefault();\n  }\n\n  resetKeypad(event) {\n    const elementId = this.findElementId(event.key);\n\n    if (elementId) {\n      document.getElementById(elementId).classList.remove(\"keyActive\");\n    }\n  }\n\n  updateDisplay(key) {\n    // Helper methods.\n    /**\n     * Clear the timeout object stored in the component state.\n     * @returns nothing.\n     */\n    const clearTimeoutObj = () => {\n      if (!this.state.timeoutObj) return;\n\n      clearTimeout(this.state.timeoutObj);\n      this.setState({\n        timeoutObj: null,\n      });\n    };\n    /**\n     * Check whether the length of element stored with strings exceeds the length of outer element container minus an offset to prevent numbers in element span from being pushed to the right.\n     * @param {HTMLElement} element\n     * @returns A boolean of whether the element width exceeds the difference between container width and offset.\n     */\n    const isExceed = (element, offset = this.state.containerOffset) => {\n      const parent = element.parentElement;\n      const parentComputedStyles = getComputedStyle(parent);\n      return (\n        element.clientWidth >=\n        parent.clientWidth -\n          parseFloat(parentComputedStyles.paddingLeft) -\n          parseFloat(parentComputedStyles.paddingRight) -\n          offset\n      );\n    };\n\n    const displaySpan = document.querySelector(\"#display > span\");\n    const opDisplay = document.querySelector(\"#op-display\");\n    const opDisplaySpan = opDisplay.firstElementChild;\n\n    if (this.state.result !== null) {\n      opDisplaySpan.style.paddingRight = 0;\n      displaySpan.style.paddingRight = 0;\n    }\n\n    if (!isNaN(+key)) {\n      // The key is a number.\n\n      if (this.state.timeoutObj !== null) return;\n\n      if (this.state.result !== null) {\n        displaySpan.innerHTML = \"\";\n        opDisplaySpan.innerHTML = \"\";\n\n        this.setState({\n          result: null,\n        });\n      }\n\n      if (isExceed(opDisplaySpan)) {\n        const prevOpDispVal = opDisplaySpan.innerHTML;\n\n        opDisplaySpan.innerHTML = this.state.displayLimitMsg;\n        this.setState({\n          timeoutObj: setTimeout(() => {\n            opDisplaySpan.innerHTML = prevOpDispVal;\n            clearTimeoutObj();\n          }, 1000),\n        });\n      } else {\n        const validateAndCombine = (element, initialStr) => {\n          const elementStr = element.innerHTML;\n          let lastIdxOfOp = this.state.operators.reduce((id, op) => {\n            id = Math.max(id, elementStr.lastIndexOf(op));\n            return id;\n          }, -1);\n\n          if ([initialStr, \"0\", \"+\", \"*\", \"/\"].includes(elementStr))\n            element.innerHTML = key;\n          else if (\n            elementStr.charAt(elementStr.length - 1) === \"0\" &&\n            lastIdxOfOp !== -1 &&\n            elementStr.slice(lastIdxOfOp + 1) === \"0\"\n          ) {\n            // The case that lastly input number is zero and the last number is not a decimal number.\n            element.innerHTML = elementStr.slice(0, -1) + key;\n          } else element.innerHTML += key;\n        };\n\n        validateAndCombine(displaySpan, \"&nbsp;\");\n        validateAndCombine(opDisplaySpan, \"\");\n      }\n    } else if (key === \".\") {\n      if (opDisplaySpan.innerHTML.includes(key)) return;\n\n      if (this.state.result !== null) {\n        displaySpan.innerHTML = \"&nbsp;\";\n        opDisplaySpan.innerHTML = \"0\";\n\n        this.setState({\n          result: null,\n        });\n      }\n\n      const validateAndCombine = (element, initialStr) => {\n        if (element.innerHTML === initialStr) element.innerHTML = `0${key}`;\n        else if (this.state.operators.includes(element.innerHTML))\n          element.innerHTML =\n            (element.innerHTML === \"-\" ? \"-\" : \"\") + `0${key}`;\n        else if (\n          this.state.operators.includes(\n            element.innerHTML.charAt(element.innerHTML.length - 1)\n          )\n        )\n          element.innerHTML += `0${key}`;\n        else element.innerHTML += key;\n      };\n\n      validateAndCombine(displaySpan, \"&nbsp;\");\n      validateAndCombine(opDisplaySpan, \"0\");\n    } else {\n      if (this.state.result !== null) {\n        displaySpan.innerHTML = this.state.result;\n        this.setState({\n          result: null,\n        });\n      }\n      clearTimeoutObj();\n\n      if (this.state.operators.includes(key)) {\n        // Need to separate the case that key is \"-\" and key is not \"-\".\n        /**\n         * Possible cases in displaySpan.innerHTML:\n         * 1. Only contains \"&nbsp;\".\n         * 2. Only contains a number (integer or decimal number) or operator.\n         * 3. The last character is a digit or decimal.\n         * 4. The last character is an operator.\n         *    4a. Only the last character is an operator.\n         *    4b. The second last character is also an operator.\n         */\n        const displaySpanStr = displaySpan.innerHTML;\n        const lastChar = displaySpanStr.charAt(displaySpanStr.length - 1);\n        const nextLastChar = displaySpanStr.charAt(displaySpanStr.length - 2);\n        const nextLastCharIsOp = this.state.operators.includes(nextLastChar);\n\n        if (\n          displaySpanStr === \"&nbsp;\" ||\n          this.state.operators.includes(displaySpanStr)\n        ) {\n          displaySpan.innerHTML = key;\n        } else if (\n          !isNaN(+displaySpanStr) ||\n          !isNaN(+lastChar) ||\n          lastChar === \".\"\n        ) {\n          displaySpan.innerHTML += (lastChar === \".\" ? \"0\" : \"\") + key;\n        } else {\n          /**\n           * Case 1: [0-9.](*)\n           * Case 2: [0-9.](*)-\n           */\n          if (key === \"-\") {\n            if (!nextLastCharIsOp) displaySpan.innerHTML += key;\n          } else {\n            displaySpan.innerHTML =\n              displaySpan.innerHTML.slice(0, !nextLastCharIsOp ? -1 : -2) + key;\n          }\n        }\n\n        opDisplaySpan.innerHTML = key;\n      } else if (key === \"=\" || key === \"Enter\") {\n        /*\n        Calculate the result according to immediate execution logic.\n        For example:\n        3 + 5 x 6 - 2 / 4 \n        = 8 x 6 - 2 / 4\n        = 48 - 2 / 4\n        = 46 / 4\n        = 11.5\n\n        1+2-3*4/5+-6-7.0 = 1 + 2 - 3 * 4 / 5 + (-6) - 7.0\n        */\n        const regex = /(?<=[0-9.]+)[\\+\\-\\*\\/]/gi;\n        const operators = displaySpan.innerHTML.match(regex);\n        const operands = displaySpan.innerHTML.replace(regex, \",\").split(\",\");\n        let value;\n\n        if (!operators) value = +operands[0] || 0;\n        else {\n          value =\n            operators === null\n              ? +operands[0]\n              : operators.reduce((sum, operand, id) => {\n                  switch (operand) {\n                    case \"+\":\n                      return (sum += +operands[id + 1]);\n                    case \"-\":\n                      return (sum -= +operands[id + 1]);\n                    case \"*\":\n                      return (sum *= +operands[id + 1]);\n                    case \"/\":\n                      return (sum /= +operands[id + 1]);\n                  }\n                }, +operands[0]);\n\n          opDisplaySpan.innerHTML = value;\n          this.setState({\n            result: value,\n          });\n\n          if (isExceed(opDisplaySpan)) {\n            opDisplaySpan.style.paddingRight = `12px`;\n            opDisplay.scroll({ left: opDisplaySpan.clientWidth });\n          }\n        }\n      } else {\n        displaySpan.innerHTML = \"&nbsp;\";\n        opDisplaySpan.innerHTML = 0;\n\n        opDisplaySpan.style.paddingRight = 0;\n        displaySpan.style.paddingRight = 0;\n\n        this.setState({\n          result: null,\n        });\n      }\n    }\n\n    if (isExceed(displaySpan, 0)) {\n      displaySpan.style.paddingRight = `12px`;\n      displaySpan.parentElement.scroll({ left: displaySpan.clientWidth });\n    }\n  }\n\n  render() {\n    return (\n      <Container id=\"calculator-body\">\n        <Display />\n        <Keypad updateDisplay={this.updateDisplay} />\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import Main from \"./components/MainComponent\";\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Container id=\"outer-container\" className=\"align-items-center\">\n      <Main />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}