{"version":3,"sources":["components/DisplayComponent.js","components/KeypadComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Display","Row","className","id","Col","Keypad","props","keyPressCallback","event","updateDisplay","target","innerHTML","Container","xs","onClick","Main","state","timeoutObj","containerOffset","result","displayLimitMsg","pressedKeyElement","operators","keyToClickableId","1","2","3","4","5","6","7","8","9","0","Escape","Enter","bind","detectKeyStrokeAndUpdateDisplay","resetKeypad","findElementId","document","addEventListener","this","removeEventListener","key","elementId","keyElement","getElementById","classList","add","includes","setState","preventDefault","remove","clearTimeoutObj","clearTimeout","isExceed","element","offset","parent","parentElement","parentComputedStyles","getComputedStyle","clientWidth","parseFloat","paddingLeft","paddingRight","displaySpan","querySelector","opDisplaySpan","firstElementChild","userAgentString","navigator","userAgent","style","isNaN","validateAndCombine","initialStr","charAt","length","displaySpanStr","lastChar","nextLastChar","nextLastCharIsOp","slice","value","regex","match","operands","replace","split","map","op","reduce","sum","operand","Error","err","message","prevOpDispVal","setTimeout","elementStr","lastIdxOfOp","Math","max","lastIndexOf","scroll","left","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c78a09b3.chunk.js","sourcesContent":["import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function Display() {\n  return (\n    <Row className=\"row-container\" id=\"display-container\">\n      <Col id=\"display\">\n        <span id=\"display-text\">&nbsp;</span>\n      </Col>\n      <hr />\n      <Col id=\"op-display\">\n        <span id=\"op-display-text\">0</span>\n      </Col>\n    </Row>\n  );\n}\n","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default function Keypad(props) {\n  const keyPressCallback = (event) =>\n    props.updateDisplay(event.target.innerHTML);\n\n  return (\n    <Row className=\"row-container\" id=\"keypad-container\">\n      <Container id=\"keypad\">\n        <Row>\n          <Col\n            xs={6}\n            id=\"clear\"\n            className=\"clickable\"\n            onClick={keyPressCallback}\n          >\n            AC\n          </Col>\n          <Col\n            id=\"divide\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            /\n          </Col>\n          <Col\n            id=\"multiply\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            *\n          </Col>\n        </Row>\n        <Row>\n          <Col id=\"seven\" className=\"clickable\" onClick={keyPressCallback}>\n            7\n          </Col>\n          <Col id=\"eight\" className=\"clickable\" onClick={keyPressCallback}>\n            8\n          </Col>\n          <Col id=\"nine\" className=\"clickable\" onClick={keyPressCallback}>\n            9\n          </Col>\n          <Col\n            id=\"subtract\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            -\n          </Col>\n        </Row>\n        <Row>\n          <Col id=\"four\" className=\"clickable\" onClick={keyPressCallback}>\n            4\n          </Col>\n          <Col id=\"five\" className=\"clickable\" onClick={keyPressCallback}>\n            5\n          </Col>\n          <Col id=\"six\" className=\"clickable\" onClick={keyPressCallback}>\n            6\n          </Col>\n          <Col\n            id=\"add\"\n            className=\"operand clickable\"\n            onClick={keyPressCallback}\n          >\n            +\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={9} className=\"no-border nested-row\">\n            <Row>\n              <Col id=\"one\" className=\"clickable\" onClick={keyPressCallback}>\n                1\n              </Col>\n              <Col id=\"two\" className=\"clickable\" onClick={keyPressCallback}>\n                2\n              </Col>\n              <Col id=\"three\" className=\"clickable\" onClick={keyPressCallback}>\n                3\n              </Col>\n            </Row>\n            <Row>\n              <Col\n                xs={8}\n                id=\"zero\"\n                className=\"clickable\"\n                onClick={keyPressCallback}\n              >\n                0\n              </Col>\n              <Col\n                id=\"decimal\"\n                className=\"clickable\"\n                onClick={keyPressCallback}\n              >\n                .\n              </Col>\n            </Row>\n          </Col>\n          <Col id=\"equals\" className=\"clickable\" onClick={keyPressCallback}>\n            =\n          </Col>\n        </Row>\n      </Container>\n    </Row>\n  );\n}\n","import { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Display from \"./DisplayComponent\";\nimport Keypad from \"./KeypadComponent\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeoutObj: null,\n      containerOffset: 20,\n      result: null,\n      displayLimitMsg: \"LIMIT MET\",\n      pressedKeyElement: null,\n      operators: [\"+\", \"-\", \"*\", \"/\"],\n      keyToClickableId: {\n        1: \"one\",\n        2: \"two\",\n        3: \"three\",\n        4: \"four\",\n        5: \"five\",\n        6: \"six\",\n        7: \"seven\",\n        8: \"eight\",\n        9: \"nine\",\n        0: \"zero\",\n        \".\": \"decimal\",\n        Escape: \"clear\",\n        \"/\": \"divide\",\n        \"*\": \"multiply\",\n        \"+\": \"add\",\n        \"-\": \"subtract\",\n        \"=\": \"equals\",\n        Enter: \"equals\",\n      },\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.detectKeyStrokeAndUpdateDisplay =\n      this.detectKeyStrokeAndUpdateDisplay.bind(this);\n    this.resetKeypad = this.resetKeypad.bind(this);\n    this.findElementId = this.findElementId.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.detectKeyStrokeAndUpdateDisplay);\n    document.addEventListener(\"keyup\", this.resetKeypad);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      \"keydown\",\n      this.detectKeyStrokeAndUpdateDisplay\n    );\n    document.removeEventListener(\"keyup\", this.resetKeypad);\n  }\n\n  findElementId(key) {\n    return (\n      this.state.keyToClickableId[key] ||\n      this.state.keyToClickableId[+key] ||\n      null\n    );\n  }\n\n  detectKeyStrokeAndUpdateDisplay(event) {\n    const key = event.key;\n    const elementId = this.findElementId(key);\n\n    if (elementId) {\n      this.updateDisplay(key);\n      const keyElement = document.getElementById(elementId);\n      keyElement.classList.add(\"keyActive\");\n\n      if (this.state.operators.includes(key)) {\n        this.setState({\n          pressedKeyElement: keyElement\n        });\n      }\n    }\n    if (key === \"/\") event.preventDefault();\n  }\n\n  resetKeypad(event) {\n    const key = event.key;\n    const elementId = this.findElementId(key);\n\n    if (this.state.pressedKeyElement || elementId) {\n      const element = this.state.pressedKeyElement \n      || document.getElementById(elementId);\n\n      element.classList.remove(\"keyActive\");\n\n      if (this.state.operators.includes(key)) {\n        this.setState({\n          pressedKeyElement: null\n        });\n      }\n    }\n  }\n\n  /*\n   * Becomes a god function!\n   * Definitely need refactoring.\n   */\n  updateDisplay(key) {\n    // Helper methods.\n    /**\n     * Clear the timeout object stored in the component state.\n     * @returns nothing.\n     */\n    const clearTimeoutObj = () => {\n      if (!this.state.timeoutObj) return;\n\n      clearTimeout(this.state.timeoutObj);\n      this.setState({\n        timeoutObj: null,\n      });\n    };\n    /**\n     * Check whether the length of element stored with strings exceeds the length of outer element container minus an offset to prevent numbers in element span from being pushed to the right.\n     * @param {HTMLElement} element\n     * @returns A boolean of whether the element width exceeds the difference between container width and offset.\n     */\n    const isExceed = (element, offset = this.state.containerOffset) => {\n      const parent = element.parentElement;\n      const parentComputedStyles = getComputedStyle(parent);\n      return (\n        element.clientWidth >=\n        parent.clientWidth -\n          parseFloat(parentComputedStyles.paddingLeft) -\n          parseFloat(parentComputedStyles.paddingRight) -\n          offset\n      );\n    };\n\n    const displaySpan = document.querySelector(\"#display > span\");\n    const opDisplay = document.querySelector(\"#op-display\");\n    const opDisplaySpan = opDisplay.firstElementChild;\n    const userAgentString = navigator.userAgent;\n\n    if (this.state.result !== null) {\n      opDisplaySpan.style.paddingRight = 0;\n      displaySpan.style.paddingRight = 0;\n    }\n    if (displaySpan.innerHTML === \"DIV BY 0\") {\n      displaySpan.innerHTML = \"&nbsp;\";\n      opDisplaySpan.innerHTML = \"\";\n    }\n\n    if (!isNaN(+key)) {\n      // The key is a number.\n\n      if (this.state.timeoutObj !== null) return;\n\n      if (this.state.result !== null) {\n        displaySpan.innerHTML = \"&nbsp;\";\n        opDisplaySpan.innerHTML = \"\";\n\n        this.setState({\n          result: null,\n        });\n      }\n\n      if (isExceed(opDisplaySpan)) {\n        const prevOpDispVal = opDisplaySpan.innerHTML;\n\n        opDisplaySpan.innerHTML = this.state.displayLimitMsg;\n        this.setState({\n          timeoutObj: setTimeout(() => {\n            opDisplaySpan.innerHTML = prevOpDispVal;\n            clearTimeoutObj();\n          }, 1000),\n        });\n      } else {\n        const validateAndCombine = (element, initialStr) => {\n          const elementStr = element.innerHTML;\n          let lastIdxOfOp = this.state.operators.reduce((id, op) => {\n            id = Math.max(id, elementStr.lastIndexOf(op));\n            return id;\n          }, -1);\n\n          if ([initialStr, \"0\", \"+\", \"*\", \"/\"].includes(elementStr))\n            element.innerHTML = key;\n          else if (\n            elementStr.charAt(elementStr.length - 1) === \"0\" &&\n            lastIdxOfOp !== -1 &&\n            elementStr.slice(lastIdxOfOp + 1) === \"0\"\n          ) {\n            // The case that lastly input number is zero and the last number is not a decimal number.\n            element.innerHTML = elementStr.slice(0, -1) + key;\n          } else element.innerHTML += key;\n        };\n\n        validateAndCombine(displaySpan, \"&nbsp;\");\n        validateAndCombine(opDisplaySpan, \"\");\n      }\n    } else if (key === \".\") {\n      if (opDisplaySpan.innerHTML.includes(key)) return;\n\n      if (this.state.result !== null) {\n        displaySpan.innerHTML = \"&nbsp;\";\n        opDisplaySpan.innerHTML = \"0\";\n\n        this.setState({\n          result: null,\n        });\n      }\n\n      const validateAndCombine = (element, initialStr) => {\n        if (element.innerHTML === initialStr) element.innerHTML = `0${key}`;\n        else if (this.state.operators.includes(element.innerHTML))\n          element.innerHTML =\n            (element.innerHTML === \"-\" ? \"-\" : \"\") + `0${key}`;\n        else if (\n          this.state.operators.includes(\n            element.innerHTML.charAt(element.innerHTML.length - 1)\n          )\n        )\n          element.innerHTML += `0${key}`;\n        else element.innerHTML += key;\n      };\n\n      validateAndCombine(displaySpan, \"&nbsp;\");\n      validateAndCombine(opDisplaySpan, \"0\");\n    } else {\n      if (this.state.result !== null) {\n        displaySpan.innerHTML = this.state.result;\n        this.setState({\n          result: null,\n        });\n      }\n      clearTimeoutObj();\n\n      if (this.state.operators.includes(key)) {\n        // Need to separate the case that key is \"-\" and key is not \"-\".\n        /**\n         * Possible cases in displaySpan.innerHTML:\n         * 1. Only contains \"&nbsp;\".\n         * 2. Only contains a number (integer or decimal number) or operator.\n         * 3. The last character is a digit or decimal.\n         * 4. The last character is an operator.\n         *    4a. Only the last character is an operator.\n         *    4b. The second last character is also an operator.\n         */\n        const displaySpanStr = displaySpan.innerHTML;\n        const lastChar = displaySpanStr.charAt(displaySpanStr.length - 1);\n        const nextLastChar = displaySpanStr.charAt(displaySpanStr.length - 2);\n        const nextLastCharIsOp = this.state.operators.includes(nextLastChar);\n\n        if (\n          displaySpanStr === \"&nbsp;\" ||\n          this.state.operators.includes(displaySpanStr)\n        ) {\n          displaySpan.innerHTML = key;\n        } else if (\n          !isNaN(+displaySpanStr) ||\n          !isNaN(+lastChar) ||\n          lastChar === \".\"\n        ) {\n          displaySpan.innerHTML += (lastChar === \".\" ? \"0\" : \"\") + key;\n        } else {\n          /**\n           * Case 1: [0-9.](*)\n           * Case 2: [0-9.](*)-\n           */\n          if (key === \"-\") {\n            if (!nextLastCharIsOp) displaySpan.innerHTML += key;\n          } else {\n            displaySpan.innerHTML =\n              displaySpan.innerHTML.slice(0, !nextLastCharIsOp ? -1 : -2) + key;\n          }\n        }\n\n        opDisplaySpan.innerHTML = key;\n      } else if (key === \"=\" || key === \"Enter\") {\n        /*\n        Calculate the result according to immediate execution logic.\n        For example:\n        3 + 5 x 6 - 2 / 4 \n        = 8 x 6 - 2 / 4\n        = 48 - 2 / 4\n        = 46 / 4\n        = 11.5\n\n        Test string:\n        -0+1-2*3/4+-5--6*-7.0/-0.008*9.-10\n\n        */\n        const regex = /[\\d.](?:[+\\-*/])/g;\n        let operators = displaySpan.innerHTML.match(regex);\n        let operands = displaySpan.innerHTML.replace(regex, \",\").split(\",\");\n\n        if (operators) {\n          operands = operands.map((op, id) => {\n            if (operators && id < operators.length)\n              return (op + operators[id].slice(0, -1));\n            else return op;\n          });\n          operators = operators.map(op => op.slice(1));\n        }\n        // console.log(operators, operands);\n        // return;\n\n        let value;\n\n        if (!operators) {\n          if (operands[0] === \"-0\") operands[0] = \"0\";\n          value = +operands[0] || 0;\n        }\n        else {\n          try {\n            value = operators.reduce((sum, operand, id) => {\n              switch (operand) {\n                case \"+\":\n                  (sum += +operands[id + 1]);\n                  break;\n                case \"-\":\n                  (sum -= +operands[id + 1]);\n                  break;\n                case \"*\":\n                  (sum *= +operands[id + 1]);\n                  break;\n                case \"/\":\n                  const operand = +operands[id + 1];\n                  if ([0, -0].includes(operand)) throw new Error(\"DIV BY 0\");\n                  (sum /= operand);\n                  break;\n                default:\n                  break;\n              }\n\n              return sum;\n            }, +operands[0]);\n          }\n          catch (err) {\n            displaySpan.innerHTML = err.message;\n            opDisplaySpan.innerHTML = \"\";\n            this.setState({\n              result: null,\n            });\n            return;\n          }\n        }\n\n        opDisplaySpan.innerHTML = value;\n\n        if (isExceed(opDisplaySpan)) {\n          if (userAgentString.includes(\"Firefox\"))\n            opDisplaySpan.style.paddingRight = `12px`;\n          \n        }\n\n        this.setState({\n          result: value,\n        });\n      } else {\n        displaySpan.innerHTML = \"&nbsp;\";\n        opDisplaySpan.innerHTML = 0;\n\n        opDisplaySpan.style.paddingRight = 0;\n        displaySpan.style.paddingRight = 0;\n\n        this.setState({\n          result: null,\n        });\n      }\n    }\n\n    if (isExceed(displaySpan, 0)) {\n      if (userAgentString.includes(\"Firefox\"))\n        displaySpan.style.paddingRight = `12px`;\n      displaySpan.parentElement.scroll({ left: displaySpan.clientWidth });\n    }\n  }\n\n  render() {\n    return (\n      <Container id=\"calculator-body\">\n        <Display />\n        <Keypad updateDisplay={this.updateDisplay} />\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import Main from \"./components/MainComponent\";\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Container id=\"outer-container\" className=\"align-items-center\">\n      <Main />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}